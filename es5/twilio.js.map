{"version":3,"file":"twilio.js","sourceRoot":"","sources":["../lib/twilio.ts"],"names":[],"mappings":";;AAAA;;;GAGG;AACH,iCAAsC;AACtC,kDAA6C;AA6DpC,qBA7DF,oBAAU,CA6DE;AA5DnB,0CAAqC;AA4DhB,iBA5Dd,gBAAM,CA4Dc;AA3D3B,0DAA8D;AA2DjC,wBA3DpB,yBAAa,CA2DoB;AAzD1C,IAAM,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAyDA,0BAAO;AAvDnD,IAAI,QAAmC,CAAC;AACxC,MAAM,CAAC,cAAc,CAAC,gBAAM,EAAE,UAAU,EAAE;IACxC,GAAG,EAAE,cAAM,OAAA,QAAQ,EAAR,CAAQ;IACnB,GAAG,EAAE,UAAC,SAAS;QACb,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,QAAQ,GAAG,IAAI,CAAC;SACjB;IACH,CAAC;CACF,CAAC,CAAC;AAEF,gBAAc,CAAC,OAAO,GAAG,SAAS,gBAAgB;IACjD,IAAI,QAAQ,EAAE;QACZ,QAAQ,CAAC,OAAO,EAAE,CAAC;KACpB;IACD,aAAa,EAAE,CAAC;AAClB,CAAC,CAAC;AAEF;;;;GAIG;AACH,SAAS,aAAa;IACpB,QAAQ,GAAG,IAAI,gBAAM,EAAE,CAAC;IAExB,MAAM,CAAC,mBAAmB,CAAC,gBAAM,CAAC,SAAS,CAAC;SACzC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,qBAAY,CAAC,SAAS,CAAC,CAAC;SAC1D,MAAM,CAAC,UAAC,IAAkB;QACzB,OAAO,OAAO,gBAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC;IACtD,CAAC,CAAC;SACD,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,SAAS,EAAlB,CAAkB,CAAC;SAClC,OAAO,CAAC,UAAA,IAAI;QACV,gBAAc,CAAC,IAAI,CAAC,GAAI,gBAAM,CAAC,SAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;AACP,CAAC;AAED,aAAa,EAAE,CAAC;AAEhB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;KACjC,MAAM,CAAC,UAAC,IAAkB,IAAK,OAAA,OAAO,gBAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,UAAU,EAA5C,CAA4C,CAAC;KAC5E,OAAO,CAAC,UAAC,IAAkB;IAC1B,MAAM,CAAC,cAAc,CAAC,gBAAM,EAAE,IAAI,EAAE;QAClC,GAAG,EAAE;YACH,IAAI,QAAQ,EAAE;gBACZ,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;QACH,CAAC;QACD,GAAG,EAAE,UAAC,KAAK;YACT,IAAI,QAAQ,EAAE;gBACX,QAAgB,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACjC;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @packageDocumentation\n * @internalapi\n */\nimport { EventEmitter } from 'events';\nimport Connection from './twilio/connection';\nimport Device from './twilio/device';\nimport { PreflightTest } from './twilio/preflight/preflight' ;\n\nconst PStream = require('./twilio/pstream');\n\nlet instance: Device | null | undefined;\nObject.defineProperty(Device, 'instance', {\n  get: () => instance,\n  set: (_instance) => {\n    if (_instance === null) {\n      instance = null;\n    }\n  },\n});\n\n(Device as any).destroy = function destroySingleton() {\n  if (instance) {\n    instance.destroy();\n  }\n  bindSingleton();\n};\n\n/**\n * Create a new Device instance and bind its functions to the Device static. This maintains\n * backwards compatibility for the Device singleton behavior and will be removed in the next\n * breaking release.\n */\nfunction bindSingleton() {\n  instance = new Device();\n\n  Object.getOwnPropertyNames(Device.prototype)\n    .concat(Object.getOwnPropertyNames(EventEmitter.prototype))\n    .filter((prop: keyof Device) => {\n      return typeof Device.prototype[prop] === 'function';\n    })\n    .filter(prop => prop !== 'destroy')\n    .forEach(prop => {\n      (Device as any)[prop] = (Device.prototype as any)[prop].bind(instance);\n    });\n}\n\nbindSingleton();\n\nObject.getOwnPropertyNames(instance)\n  .filter((prop: keyof Device) => typeof Device.prototype[prop] !== 'function')\n  .forEach((prop: keyof Device) => {\n    Object.defineProperty(Device, prop, {\n      get: () => {\n        if (instance) {\n          return instance[prop];\n        }\n      },\n      set: (_prop) => {\n        if (instance) {\n          (instance as any)[prop] = _prop;\n        }\n      },\n    });\n  });\n\nexport { Connection, Device, PreflightTest, PStream };\n"]}