{"version":3,"file":"deferred.js","sourceRoot":"","sources":["../../lib/twilio/deferred.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAEH;;GAEG;AACH;IAgBE;;OAEG;IACH;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YAC/C,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,sBAAI,6BAAO;QAHX;;WAEG;aACH;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED;;OAEG;IACH,yBAAM,GAAN,UAAO,MAAY;QACjB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,0BAAO,GAAP,UAAQ,KAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IACH,eAAC;AAAD,CAAC,AA9CD,IA8CC","sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n\n/**\n * Deferred Promise\n */\nexport default class Deferred {\n  /**\n   * This {@link Deferred} Promise\n   */\n  private readonly _promise: Promise<any>;\n\n  /**\n   * The Promise's reject method.\n   */\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The Promise's resolve method.\n   */\n  private _resolve: (value?: any) => void;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this._promise = new Promise<any>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * @returns The {@link Deferred} Promise\n   */\n  get promise(): Promise<any> {\n    return this._promise;\n  }\n\n  /**\n   * Rejects this promise\n   */\n  reject(reason?: any): void {\n    this._reject(reason);\n  }\n\n  /**\n   * Resolves this promise\n   */\n  resolve(value?: any): void {\n    this._resolve(value);\n  }\n}\n"]}