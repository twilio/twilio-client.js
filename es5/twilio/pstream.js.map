{"version":3,"file":"pstream.js","sourceRoot":"","sources":["../../lib/twilio/pstream.js"],"names":[],"mappings":"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","sourcesContent":["const C = require('./constants');\nconst EventEmitter = require('events').EventEmitter;\nconst util = require('util');\nconst log = require('./log');\n\nconst WSTransport = require('./wstransport').default;\n\nconst PSTREAM_VERSION = '1.5';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string} uri The PStream endpoint URI\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n * @config {boolean} [options.debug=false] Enable debugging\n */\nfunction PStream(token, uri, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uri, options);\n  }\n  const defaults = {\n    logPrefix: '[PStream]',\n    TransportFactory: WSTransport,\n    debug: false\n  };\n  options = options || {};\n  for (const prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.uri = uri;\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n\n  log.mixinLog(this, this.options.logPrefix);\n  this.log.enabled = this.options.debug;\n\n  // NOTE(mroberts): EventEmitter requires that we catch all errors.\n  this.on('error', () => { });\n\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  const self = this;\n\n  this.addListener('ready', () => {\n    self.status = 'ready';\n  });\n\n  this.addListener('offline', () => {\n    self.status = 'offline';\n  });\n\n  this.addListener('close', () => {\n    self.log('Received \"close\" from server. Destroying PStream...');\n    self._destroy();\n  });\n\n  this.transport = new this.options.TransportFactory(this.uri, {\n    backoffMaxMs: this.options.backoffMaxMs,\n    logLevel: this.options.debug ? 'debug' : 'off'\n  });\n\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n\n  return this;\n}\n\nutil.inherits(PStream, EventEmitter);\n\nPStream.prototype._handleTransportClose = function() {\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function(error) {\n  if (!error) {\n    this.emit('error', { error: { code: 31000, message: 'Websocket closed without a provided reason' } });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ?  { error } : error);\n};\n\nPStream.prototype._handleTransportMessage = function(msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  const { type, payload = {} } = JSON.parse(msg.data);\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function() {\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  const messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(message => this._publish(...message));\n};\n\n/**\n * @return {string}\n */\nPStream.toString = () => '[Twilio.PStream class]';\nPStream.prototype.toString = () => '[Twilio.PStream instance]';\n\nPStream.prototype.setToken = function(token) {\n  this.log('Setting token and publishing listen');\n  this.token = token;\n  const payload = {\n    token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function(mediaCapabilities) {\n  const regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype._destroy = function() {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function() {\n  this.log('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\n\nPStream.prototype.publish = function(type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function(type, payload, shouldRetry) {\n  const msg = JSON.stringify({\n    type,\n    version: PSTREAM_VERSION,\n    payload\n  });\n\n  if (!this.transport.send(msg) && shouldRetry) {\n    this._messageQueue.push([type, payload, true]);\n  }\n};\n\nfunction getBrowserInfo() {\n  const nav = typeof navigator !== 'undefined' ? navigator : {};\n\n  const info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n\n  return info;\n}\n\nexports.PStream = PStream;\n"]}