{"version":3,"file":"mockrtcstatsreport.js","sourceRoot":"","sources":["../../../lib/twilio/rtc/mockrtcstatsreport.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This file was imported from another project. If making changes to this file, please don't\n * make them here. Make them on the linked repo below, then copy back:\n * https://code.hq.twilio.com/client/MockRTCStatsReport\n */\n\n/* eslint-disable no-undefined */\n\n// The legacy max volume, which is the positive half of a signed short integer.\nconst OLD_MAX_VOLUME = 32767;\n\nconst NativeRTCStatsReport = typeof window !== 'undefined'\n  ? window.RTCStatsReport : undefined;\n\n/**\n * Create a MockRTCStatsReport wrapper around a Map of RTCStats objects. If RTCStatsReport is available\n *   natively, it will be inherited so that instanceof checks pass.\n * @constructor\n * @extends RTCStatsReport\n * @param {Map<string, RTCStats>} statsMap - A Map of RTCStats objects to wrap\n *   with a MockRTCStatsReport object.\n */\nfunction MockRTCStatsReport(statsMap) {\n  if (!(this instanceof MockRTCStatsReport)) {\n    return new MockRTCStatsReport(statsMap);\n  }\n\n  const self = this;\n  Object.defineProperties(this, {\n    size: {\n      enumerable: true,\n      get() {\n        return self._map.size;\n      }\n    },\n    _map: { value: statsMap }\n  });\n\n  this[Symbol.iterator] = statsMap[Symbol.iterator];\n}\n\n// If RTCStatsReport is available natively, inherit it. Keep our constructor.\nif (NativeRTCStatsReport) {\n  MockRTCStatsReport.prototype = Object.create(NativeRTCStatsReport.prototype);\n  MockRTCStatsReport.prototype.constructor = MockRTCStatsReport;\n}\n\n// Map the Map-like read methods to the underlying Map\n['entries', 'forEach', 'get', 'has', 'keys', 'values'].forEach(key => {\n  MockRTCStatsReport.prototype[key] = function(...args) {\n    return this._map[key](...args);\n  };\n});\n\n/**\n * Convert an array of RTCStats objects into a mock RTCStatsReport object.\n * @param {Array<RTCStats>}\n * @return {MockRTCStatsReport}\n */\nMockRTCStatsReport.fromArray = function fromArray(array) {\n  return new MockRTCStatsReport(array.reduce((map, rtcStats) => {\n    map.set(rtcStats.id, rtcStats);\n    return map;\n  }, new Map()));\n};\n\n/**\n * Convert a legacy RTCStatsResponse object into a mock RTCStatsReport object.\n * @param {RTCStatsResponse} statsResponse - An RTCStatsResponse object returned by the\n *   legacy getStats(callback) method in Chrome.\n * @return {MockRTCStatsReport} A mock RTCStatsReport object.\n */\nMockRTCStatsReport.fromRTCStatsResponse = function fromRTCStatsResponse(statsResponse) {\n  let activeCandidatePairId;\n  const transportIds = new Map();\n\n  const statsMap = statsResponse.result().reduce((map, report) => {\n    const id = report.id;\n    switch (report.type) {\n      case 'googCertificate':\n        map.set(id, createRTCCertificateStats(report));\n        break;\n      case 'datachannel':\n        map.set(id, createRTCDataChannelStats(report));\n        break;\n      case 'googCandidatePair':\n        if (getBoolean(report, 'googActiveConnection')) {\n          activeCandidatePairId = id;\n        }\n\n        map.set(id, createRTCIceCandidatePairStats(report));\n        break;\n      case 'localcandidate':\n        map.set(id, createRTCIceCandidateStats(report, false));\n        break;\n      case 'remotecandidate':\n        map.set(id, createRTCIceCandidateStats(report, true));\n        break;\n      case 'ssrc':\n        if (isPresent(report, 'packetsReceived')) {\n          map.set(`rtp-${id}`, createRTCInboundRTPStreamStats(report));\n        } else {\n          map.set(`rtp-${id}`, createRTCOutboundRTPStreamStats(report));\n        }\n\n        map.set(`track-${id}`, createRTCMediaStreamTrackStats(report));\n        map.set(`codec-${id}`, createRTCCodecStats(report));\n        break;\n      case 'googComponent':\n        const transportReport = createRTCTransportStats(report);\n        transportIds.set(transportReport.selectedCandidatePairId, id);\n        map.set(id, createRTCTransportStats(report));\n        break;\n    }\n\n    return map;\n  }, new Map());\n\n  if (activeCandidatePairId) {\n    const activeTransportId = transportIds.get(activeCandidatePairId);\n    if (activeTransportId) {\n      statsMap.get(activeTransportId).dtlsState = 'connected';\n    }\n  }\n\n  return new MockRTCStatsReport(statsMap);\n};\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCTransportStats}\n */\nfunction createRTCTransportStats(report) {\n  return {\n    type: 'transport',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    bytesSent: undefined,\n    bytesReceived: undefined,\n    rtcpTransportStatsId: undefined,\n    dtlsState: undefined,\n    selectedCandidatePairId: report.stat('selectedCandidatePairId'),\n    localCertificateId: report.stat('localCertificateId'),\n    remoteCertificateId: report.stat('remoteCertificateId')\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCCodecStats}\n */\nfunction createRTCCodecStats(report) {\n  return {\n    type: 'codec',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    payloadType: undefined,\n    mimeType: `${report.stat('mediaType')}/${report.stat('googCodecName')}`,\n    clockRate: undefined,\n    channels: undefined,\n    sdpFmtpLine: undefined,\n    implementation: undefined\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCMediaStreamTrackStats}\n */\nfunction createRTCMediaStreamTrackStats(report) {\n  return {\n    type: 'track',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    trackIdentifier: report.stat('googTrackId'),\n    remoteSource: undefined,\n    ended: undefined,\n    kind: report.stat('mediaType'),\n    detached: undefined,\n    ssrcIds: undefined,\n    frameWidth: isPresent(report, 'googFrameWidthReceived')\n      ? getInt(report, 'googFrameWidthReceived')\n      : getInt(report, 'googFrameWidthSent'),\n    frameHeight: isPresent(report, 'googFrameHeightReceived')\n      ? getInt(report, 'googFrameHeightReceived')\n      : getInt(report, 'googFrameHeightSent'),\n    framesPerSecond: undefined,\n    framesSent: getInt(report, 'framesEncoded'),\n    framesReceived: undefined,\n    framesDecoded: getInt(report, 'framesDecoded'),\n    framesDropped: undefined,\n    framesCorrupted: undefined,\n    partialFramesLost: undefined,\n    fullFramesLost: undefined,\n    audioLevel: isPresent(report, 'audioOutputLevel')\n      ? getInt(report, 'audioOutputLevel') / OLD_MAX_VOLUME\n      : (getInt(report, 'audioInputLevel') || 0) / OLD_MAX_VOLUME,\n    echoReturnLoss: getFloat(report, 'googEchoCancellationReturnLoss'),\n    echoReturnLossEnhancement: getFloat(report, 'googEchoCancellationReturnLossEnhancement')\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @param {boolean} isInbound - Whether to create an inbound stats object, or outbound.\n * @returns {RTCRTPStreamStats}\n */\nfunction createRTCRTPStreamStats(report, isInbound) {\n  return {\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    ssrc: report.stat('ssrc'),\n    associateStatsId: undefined,\n    isRemote: undefined,\n    mediaType: report.stat('mediaType'),\n    trackId: `track-${report.id}`,\n    transportId: report.stat('transportId'),\n    codecId: `codec-${report.id}`,\n    firCount: isInbound\n      ? getInt(report, 'googFirsSent')\n      : undefined,\n    pliCount: isInbound\n      ? getInt(report, 'googPlisSent')\n      : getInt(report, 'googPlisReceived'),\n    nackCount: isInbound\n      ? getInt(report, 'googNacksSent')\n      : getInt(report, 'googNacksReceived'),\n    sliCount: undefined,\n    qpSum: getInt(report, 'qpSum')\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCInboundRTPStreamStats}\n */\nfunction createRTCInboundRTPStreamStats(report) {\n  const rtp = createRTCRTPStreamStats(report, true);\n\n  Object.assign(rtp, {\n    type: 'inbound-rtp',\n    packetsReceived: getInt(report, 'packetsReceived'),\n    bytesReceived: getInt(report, 'bytesReceived'),\n    packetsLost: getInt(report, 'packetsLost'),\n    jitter: convertMsToSeconds(report.stat('googJitterReceived')),\n    fractionLost: undefined,\n    roundTripTime: convertMsToSeconds(report.stat('googRtt')),\n    packetsDiscarded: undefined,\n    packetsRepaired: undefined,\n    burstPacketsLost: undefined,\n    burstPacketsDiscarded: undefined,\n    burstLossCount: undefined,\n    burstDiscardCount: undefined,\n    burstLossRate: undefined,\n    burstDiscardRate: undefined,\n    gapLossRate: undefined,\n    gapDiscardRate: undefined,\n    framesDecoded: getInt(report, 'framesDecoded')\n  });\n\n  return rtp;\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCOutboundRTPStreamStats}\n */\nfunction createRTCOutboundRTPStreamStats(report) {\n  const rtp = createRTCRTPStreamStats(report, false);\n\n  Object.assign(rtp, {\n    type: 'outbound-rtp',\n    remoteTimestamp: undefined,\n    packetsSent: getInt(report, 'packetsSent'),\n    bytesSent: getInt(report, 'bytesSent'),\n    targetBitrate: undefined,\n    framesEncoded: getInt(report, 'framesEncoded')\n  });\n\n  return rtp;\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @param {boolean} isRemote - Whether to create for a remote candidate, or local candidate.\n * @returns {RTCIceCandidateStats}\n */\nfunction createRTCIceCandidateStats(report, isRemote) {\n  return {\n    type: isRemote\n      ? 'remote-candidate'\n      : 'local-candidate',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    transportId: undefined,\n    isRemote,\n    ip: report.stat('ipAddress'),\n    port: getInt(report, 'portNumber'),\n    protocol: report.stat('transport'),\n    candidateType: translateCandidateType(report.stat('candidateType')),\n    priority: getFloat(report, 'priority'),\n    url: undefined,\n    relayProtocol: undefined,\n    deleted: undefined\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCIceCandidatePairStats}\n */\nfunction createRTCIceCandidatePairStats(report) {\n  return {\n    type: 'candidate-pair',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    transportId: report.stat('googChannelId'),\n    localCandidateId: report.stat('localCandidateId'),\n    remoteCandidateId: report.stat('remoteCandidateId'),\n    state: undefined,\n    priority: undefined,\n    nominated: undefined,\n    writable: getBoolean(report, 'googWritable'),\n    readable: undefined,\n    bytesSent: getInt(report, 'bytesSent'),\n    bytesReceived: getInt(report, 'bytesReceived'),\n    lastPacketSentTimestamp: undefined,\n    lastPacketReceivedTimestamp: undefined,\n    totalRoundTripTime: undefined,\n    currentRoundTripTime: convertMsToSeconds(report.stat('googRtt')),\n    availableOutgoingBitrate: undefined,\n    availableIncomingBitrate: undefined,\n    requestsReceived: getInt(report, 'requestsReceived'),\n    requestsSent: getInt(report, 'requestsSent'),\n    responsesReceived: getInt(report, 'responsesReceived'),\n    responsesSent: getInt(report, 'responsesSent'),\n    retransmissionsReceived: undefined,\n    retransmissionsSent: undefined,\n    consentRequestsSent: getInt(report, 'consentRequestsSent')\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCIceCertificateStats}\n */\nfunction createRTCCertificateStats(report) {\n  return {\n    type: 'certificate',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    fingerprint: report.stat('googFingerprint'),\n    fingerprintAlgorithm: report.stat('googFingerprintAlgorithm'),\n    base64Certificate: report.stat('googDerBase64'),\n    issuerCertificateId: report.stat('googIssuerId')\n  };\n}\n\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCDataChannelStats}\n */\nfunction createRTCDataChannelStats(report) {\n  return {\n    type: 'data-channel',\n    id: report.id,\n    timestamp: Date.parse(report.timestamp),\n    label: report.stat('label'),\n    protocol: report.stat('protocol'),\n    datachannelid: report.stat('datachannelid'),\n    transportId: report.stat('transportId'),\n    state: report.stat('state'),\n    messagesSent: undefined,\n    bytesSent: undefined,\n    messagesReceived: undefined,\n    bytesReceived: undefined\n  };\n}\n\n/**\n * @param {number} inMs - A time in milliseconds\n * @returns {number} The time in seconds\n */\nfunction convertMsToSeconds(inMs) {\n  return isNaN(inMs) || inMs === ''\n    ? undefined\n    : parseInt(inMs, 10) / 1000;\n}\n\n/**\n * @param {string} type - A type in the legacy format\n * @returns {string} The type adjusted to new standards for known naming changes\n */\nfunction translateCandidateType(type) {\n  switch (type) {\n    case 'peerreflexive':\n      return 'prflx';\n    case 'serverreflexive':\n      return 'srflx';\n    case 'host':\n    case 'relay':\n    default:\n      return type;\n  }\n}\n\nfunction getInt(report, statName) {\n  const stat = report.stat(statName);\n  return isPresent(report, statName)\n    ? parseInt(stat, 10)\n    : undefined;\n}\n\nfunction getFloat(report, statName) {\n  const stat = report.stat(statName);\n  return isPresent(report, statName)\n    ? parseFloat(stat)\n    : undefined;\n}\n\nfunction getBoolean(report, statName) {\n  const stat = report.stat(statName);\n  return isPresent(report, statName)\n    ? (stat === 'true' || stat === true)\n    : undefined;\n}\n\nfunction isPresent(report, statName) {\n  const stat = report.stat(statName);\n  return typeof stat !== 'undefined' && stat !== '';\n}\n\nmodule.exports = MockRTCStatsReport;\n"]}