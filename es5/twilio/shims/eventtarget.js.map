{"version":3,"file":"eventtarget.js","sourceRoot":"","sources":["../../../lib/twilio/shims/eventtarget.js"],"names":[],"mappings":"AAAA,IAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;AAEpD,SAAS,WAAW;IAClB,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAC5B,aAAa,EAAE;YACb,KAAK,EAAE,IAAI,YAAY,EAAE;SAC1B;QACD,SAAS,EAAE;YACT,KAAK,EAAE,EAAG;SACX;KACF,CAAC,CAAC;AACL,CAAC;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,KAAK;IAChE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,WAAW,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,gBAAgB;;IAChE,OAAO,CAAA,KAAA,IAAI,CAAC,aAAa,CAAA,CAAC,WAAW,WAAI,SAAS,EAAE;AACtD,CAAC,CAAC;AAEF,WAAW,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAS,mBAAmB;;IACtE,OAAO,CAAA,KAAA,IAAI,CAAC,aAAa,CAAA,CAAC,cAAc,WAAI,SAAS,EAAE;AACzD,CAAC,CAAC;AAEF,WAAW,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAS,mBAAmB,CAAC,SAAS;IAChF,IAAM,IAAI,GAAG,IAAI,CAAC;IAClB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,OAAK,SAAW,EAAE;QAC5C,GAAG;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC;QACD,GAAG,YAAC,UAAU;YACZ,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAE7C,IAAI,UAAU;mBACT,CAAC,OAAO,UAAU,KAAK,UAAU;uBAC/B,OAAO,UAAU,KAAK,WAAW;uBACjC,UAAU,KAAK,IAAI,CAAC,EAAE;gBAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACjD;YAED,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;gBACpC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;gBACvC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aAC9C;QACH,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","sourcesContent":["const EventEmitter = require('events').EventEmitter;\n\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    },\n    _handlers: {\n      value: { }\n    },\n  });\n}\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\nEventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener(...arguments);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  return this._eventEmitter.removeListener(...arguments);\n};\n\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n  const self = this;\n  Object.defineProperty(this, `on${eventName}`, {\n    get() {\n      return self._handlers[eventName];\n    },\n    set(newHandler) {\n      const oldHandler = self._handlers[eventName];\n\n      if (oldHandler\n        && (typeof newHandler === 'function'\n          || typeof newHandler === 'undefined'\n          || newHandler === null)) {\n        self._handlers[eventName] = null;\n        self.removeEventListener(eventName, oldHandler);\n      }\n\n      if (typeof newHandler === 'function') {\n        self._handlers[eventName] = newHandler;\n        self.addEventListener(eventName, newHandler);\n      }\n    }\n  });\n};\n\nmodule.exports = EventTarget;\n"]}