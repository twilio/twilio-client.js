{"version":3,"file":"mediadevices.js","sourceRoot":"","sources":["../../../lib/twilio/shims/mediadevices.js"],"names":[],"mappings":"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","sourcesContent":["const EventTarget = require('./eventtarget');\nconst inherits = require('util').inherits;\n\nconst POLL_INTERVAL_MS = 500;\n\nconst nativeMediaDevices = typeof navigator !== 'undefined' && navigator.mediaDevices;\n\n/**\n * Make a custom MediaDevices object, and proxy through existing functionality. If\n *   devicechange is present, we simply reemit the event. If not, we will do the\n *   detection ourselves and fire the event when necessary. The same logic exists\n *   for deviceinfochange for consistency, however deviceinfochange is our own event\n *   so it is unlikely that it will ever be native. The w3c spec for devicechange\n *   is unclear as to whether MediaDeviceInfo changes (such as label) will\n *   trigger the devicechange event. We have an open question on this here:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=585096\n */\nfunction MediaDevicesShim() {\n  EventTarget.call(this);\n\n  this._defineEventHandler('devicechange');\n  this._defineEventHandler('deviceinfochange');\n\n  const knownDevices = [];\n  Object.defineProperties(this, {\n    _deviceChangeIsNative: {\n      value: reemitNativeEvent(this, 'devicechange')\n    },\n    _deviceInfoChangeIsNative: {\n      value: reemitNativeEvent(this, 'deviceinfochange')\n    },\n    _knownDevices: {\n      value: knownDevices\n    },\n    _pollInterval: {\n      value: null,\n      writable: true\n    }\n  });\n\n  if (typeof nativeMediaDevices.enumerateDevices === 'function') {\n    nativeMediaDevices.enumerateDevices().then(devices => {\n      devices.sort(sortDevicesById).forEach([].push, knownDevices);\n    });\n  }\n\n  this._eventEmitter.on('newListener', function maybeStartPolling(eventName) {\n    if (eventName !== 'devicechange' && eventName !== 'deviceinfochange') {\n      return;\n    }\n\n    this._pollInterval = this._pollInterval\n      || setInterval(sampleDevices.bind(null, this), POLL_INTERVAL_MS);\n  }.bind(this));\n\n  this._eventEmitter.on('removeListener', function maybeStopPolling() {\n    if (this._pollInterval && !hasChangeListeners(this)) {\n      clearInterval(this._pollInterval);\n      this._pollInterval = null;\n    }\n  }.bind(this));\n}\n\ninherits(MediaDevicesShim, EventTarget);\n\nif (nativeMediaDevices && typeof nativeMediaDevices.enumerateDevices === 'function') {\n  MediaDevicesShim.prototype.enumerateDevices = function enumerateDevices() {\n    return nativeMediaDevices.enumerateDevices(...arguments);\n  };\n}\n\nMediaDevicesShim.prototype.getUserMedia = function getUserMedia() {\n  return nativeMediaDevices.getUserMedia(...arguments);\n};\n\nfunction deviceInfosHaveChanged(newDevices, oldDevices) {\n  const oldLabels = oldDevices.reduce((map, device) => map.set(device.deviceId, device.label || null), new Map());\n\n  return newDevices.some(newDevice => {\n    const oldLabel = oldLabels.get(newDevice.deviceId);\n    return typeof oldLabel !== 'undefined' && oldLabel !== newDevice.label;\n  });\n}\n\nfunction devicesHaveChanged(newDevices, oldDevices) {\n  return newDevices.length !== oldDevices.length\n    || propertyHasChanged('deviceId', newDevices, oldDevices);\n}\n\nfunction hasChangeListeners(mediaDevices) {\n  return ['devicechange', 'deviceinfochange'].reduce((count, event) => count + mediaDevices._eventEmitter.listenerCount(event), 0) > 0;\n}\n\n/**\n * Sample the current set of devices and emit devicechange event if a device has been\n *   added or removed, and deviceinfochange if a device's label has changed.\n * @param {MediaDevicesShim} mediaDevices\n * @private\n */\nfunction sampleDevices(mediaDevices) {\n  nativeMediaDevices.enumerateDevices().then(newDevices => {\n    const knownDevices = mediaDevices._knownDevices;\n    const oldDevices = knownDevices.slice();\n\n    // Replace known devices in-place\n    [].splice.apply(knownDevices, [0, knownDevices.length]\n      .concat(newDevices.sort(sortDevicesById)));\n\n    if (!mediaDevices._deviceChangeIsNative\n      && devicesHaveChanged(knownDevices, oldDevices)) {\n      mediaDevices.dispatchEvent(new Event('devicechange'));\n    }\n\n    if (!mediaDevices._deviceInfoChangeIsNative\n      && deviceInfosHaveChanged(knownDevices, oldDevices)) {\n      mediaDevices.dispatchEvent(new Event('deviceinfochange'));\n    }\n  });\n}\n\n/**\n * Accepts two sorted arrays and the name of a property to compare on objects from each.\n *   Arrays should also be of the same length.\n * @param {string} propertyName - Name of the property to compare on each object\n * @param {Array<Object>} as - The left-side array of objects to compare.\n * @param {Array<Object>} bs - The right-side array of objects to compare.\n * @private\n * @returns {boolean} True if the property of any object in array A is different than\n *   the same property of its corresponding object in array B.\n */\nfunction propertyHasChanged(propertyName, as, bs) {\n  return as.some((a, i) => a[propertyName] !== bs[i][propertyName]);\n}\n\n/**\n * Re-emit the native event, if the native mediaDevices has the corresponding property.\n * @param {MediaDevicesShim} mediaDevices\n * @param {string} eventName - Name of the event\n * @private\n * @returns {boolean} Whether the native mediaDevice had the corresponding property\n */\nfunction reemitNativeEvent(mediaDevices, eventName) {\n  const methodName = `on${eventName}`;\n\n  function dispatchEvent(event) {\n    mediaDevices.dispatchEvent(event);\n  }\n\n  if (methodName in nativeMediaDevices) {\n    // Use addEventListener if it's available so we don't stomp on any other listeners\n    // for this event. Currently, navigator.mediaDevices.addEventListener does not exist in Safari.\n    if ('addEventListener' in nativeMediaDevices) {\n      nativeMediaDevices.addEventListener(eventName, dispatchEvent);\n    } else {\n      nativeMediaDevices[methodName] = dispatchEvent;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction sortDevicesById(a, b) {\n  return a.deviceId < b.deviceId;\n}\n\nmodule.exports = (function shimMediaDevices() {\n  return nativeMediaDevices ? new MediaDevicesShim() : null;\n})();\n"]}