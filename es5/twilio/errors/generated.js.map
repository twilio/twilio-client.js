{"version":3,"file":"generated.js","sourceRoot":"","sources":["../../../lib/twilio/errors/generated.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable max-classes-per-file max-line-length */\n/**\n * @packageDocumentation\n * @module Voice\n * @publicapi\n * @internal\n */\n\n/**\n * This is a generated file. Any modifications here will be overwritten. See scripts/errors.js.\n */\nimport TwilioError from './twilioError';\nexport { TwilioError };\n\n// TypeScript doesn't allow extending Error so we need to run constructor logic on every one of these\n// individually. Ideally this logic would be run in a constructor on a TwilioError class but\n// due to this limitation TwilioError is an interface.\n// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes\nfunction construct(context: TwilioError, messageOrError?: string | Error, originalError?: Error) {\n  if (typeof messageOrError === 'string') {\n    context.message = messageOrError;\n    if (originalError instanceof Error) {\n      context.originalError = originalError;\n    }\n  } else if (messageOrError instanceof Error) {\n    context.originalError = messageOrError;\n  }\n}\n\nexport namespace AuthorizationErrors {\n  export class AccessTokenInvalid extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 20101;\n    description: string = 'Invalid access token';\n    explanation: string = 'Twilio was unable to validate your Access Token';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, AuthorizationErrors.AccessTokenInvalid.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class AccessTokenExpired extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 20104;\n    description: string = 'Access token expired or expiration date invalid';\n    explanation: string = 'The Access Token provided to the Twilio API has expired, the expiration time specified in the token was invalid, or the expiration time specified was too far in the future';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, AuthorizationErrors.AccessTokenExpired.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class AuthenticationFailed extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 20151;\n    description: string = 'Authentication Failed';\n    explanation: string = 'The Authentication with the provided JWT failed';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, AuthorizationErrors.AuthenticationFailed.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n}\n\nexport namespace ClientErrors {\n  export class BadRequest extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 31400;\n    description: string = 'Bad Request (HTTP/SIP)';\n    explanation: string = 'The request could not be understood due to malformed syntax.';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, ClientErrors.BadRequest.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n}\n\nexport namespace GeneralErrors {\n  export class UnknownError extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 31000;\n    description: string = 'Unknown Error';\n    explanation: string = 'An unknown error has occurred. See error details for more information.';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, GeneralErrors.UnknownError.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class ConnectionError extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 31005;\n    description: string = 'Connection error';\n    explanation: string = 'A connection error occurred during the call';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, GeneralErrors.ConnectionError.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class TransportError extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 31009;\n    description: string = 'Transport error';\n    explanation: string = 'No transport available to send or receive messages';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, GeneralErrors.TransportError.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n}\n\nexport namespace SignalingErrors {\n  export class ConnectionError extends Error implements TwilioError {\n    causes: string[] = [];\n    code: number = 53000;\n    description: string = 'Signaling connection error';\n    explanation: string = 'Raised whenever a signaling connection error occurs that is not covered by a more specific error code.';\n    solutions: string[] = [];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, SignalingErrors.ConnectionError.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class ConnectionDisconnected extends Error implements TwilioError {\n    causes: string[] = [\n      'The device running your application lost its Internet connection.',\n    ];\n    code: number = 53001;\n    description: string = 'Signaling connection disconnected';\n    explanation: string = 'Raised whenever the signaling connection is unexpectedly disconnected.';\n    solutions: string[] = [\n      'Ensure the device running your application has access to a stable Internet connection.',\n    ];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, SignalingErrors.ConnectionDisconnected.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n}\n\nexport namespace MediaErrors {\n  export class ClientLocalDescFailed extends Error implements TwilioError {\n    causes: string[] = [\n      'The Client may not be using a supported WebRTC implementation.',\n      'The Client may not have the necessary resources to create or apply a new media description.',\n    ];\n    code: number = 53400;\n    description: string = 'Client is unable to create or apply a local media description';\n    explanation: string = 'Raised whenever a Client is unable to create or apply a local media description.';\n    solutions: string[] = [\n      'If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.',\n    ];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, MediaErrors.ClientLocalDescFailed.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class ClientRemoteDescFailed extends Error implements TwilioError {\n    causes: string[] = [\n      'The Client may not be using a supported WebRTC implementation.',\n      'The Client may be connecting peer-to-peer with another Participant that is not using a supported WebRTC implementation.',\n      'The Client may not have the necessary resources to apply a new media description.',\n    ];\n    code: number = 53402;\n    description: string = 'Client is unable to apply a remote media description';\n    explanation: string = 'Raised whenever the Client receives a remote media description but is unable to apply it.';\n    solutions: string[] = [\n      'If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.',\n    ];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, MediaErrors.ClientRemoteDescFailed.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n\n  export class ConnectionError extends Error implements TwilioError {\n    causes: string[] = [\n      'The Client was unable to establish a media connection.',\n      'A media connection which was active failed liveliness checks.',\n    ];\n    code: number = 53405;\n    description: string = 'Media connection failed';\n    explanation: string = 'Raised by the Client or Server whenever a media connection fails.';\n    solutions: string[] = [\n      'If the problem persists, try connecting to another region.',\n      'Check your Client\\'s network connectivity.',\n      'If you\\'ve provided custom ICE Servers then ensure that the URLs and credentials are valid.',\n    ];\n\n    constructor();\n    constructor(message: string);\n    constructor(originalError: Error);\n    constructor(message: string, originalError?: Error);\n    constructor(messageOrError?: string | Error, originalError?: Error) {\n      super('');\n      Object.setPrototypeOf(this, MediaErrors.ConnectionError.prototype);\n      construct(this, messageOrError, originalError);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport const errorsByCode: ReadonlyMap<number, any> = new Map([\n  [ 20101, AuthorizationErrors.AccessTokenInvalid ],\n  [ 20104, AuthorizationErrors.AccessTokenExpired ],\n  [ 20151, AuthorizationErrors.AuthenticationFailed ],\n  [ 31400, ClientErrors.BadRequest ],\n  [ 31000, GeneralErrors.UnknownError ],\n  [ 31005, GeneralErrors.ConnectionError ],\n  [ 31009, GeneralErrors.TransportError ],\n  [ 53000, SignalingErrors.ConnectionError ],\n  [ 53001, SignalingErrors.ConnectionDisconnected ],\n  [ 53400, MediaErrors.ClientLocalDescFailed ],\n  [ 53402, MediaErrors.ClientRemoteDescFailed ],\n  [ 53405, MediaErrors.ConnectionError ],\n]);\n\nObject.freeze(errorsByCode);\n"]}